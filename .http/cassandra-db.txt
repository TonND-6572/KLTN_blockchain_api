-- ---- DROP TABLE ------
-- DROP TABLE blockchain_by_year;
-- DROP TABLE order_tracking;
-- DROP TABLE transaction_pool;
-- DROP TABLE wallet;
--
-- ---- DROP UDT ------
-- drop type udt_transaction;
-- drop type udt_output;
-- drop type udt_input;
-- drop type udt_order;
-- drop type udt_item_attribute;

create type udt_input
    (
        address   text,
        signature text
    );

create type udt_item_attribute
    (
        item_id       bigint,
        name          text,
        quantity      int,
        unit_price    int,
        weight        float,
        item_category text
    );

create type udt_order
    (
        order_id     bigint,
        created_at   timestamp,
        created_by   text,
        total_weight float,
        total_price  float,
        sub_total    float,
        fee_paid     float,
        notice       text,
        status       text,
        items        list<frozen<udt_item_attribute>>
    );

create type udt_output
    (
        address            text,
        receiver_name      text,
        transaction_id     bigint,
        orders             frozen<udt_order>,
        transaction_status text
    );

create type udt_transaction
    (
        id           UUID,
        created_time timestamp,
        input        frozen<udt_input>,
        outputs      list<frozen<udt_output>>
    );


create table transportation_blockchain.blockchain_by_year
(
    year          int,
    created_time  timestamp,
    id            uuid,
    difficulty    int,
    hash          text,
    merkle_root   text,
    nonce         bigint,
    previous_hash text,
    transactions  list<frozen<udt_transaction>>,
    primary key (year, created_time, id)
)
            with clustering order by (created_time desc, id asc);

create table transportation_blockchain.order_tracking
(
    order_id      bigint,
    created_time  timestamp,
    receiver      text,
    receiver_name text,
    sender        text,
    status        text,
    primary key (order_id, created_time)
)
            with clustering order by (created_time desc);

create table transportation_blockchain.transaction_pool
(
    sender_address text primary key,
    transaction    frozen<udt_transaction>
);

create table transportation_blockchain.wallet
(
    address      text,
    wallet_type  text,
    code         text,
    salt_iv      text,
    secret       text,
    transactions list<frozen<udt_transaction>>,
    primary key (address, wallet_type, code)
);

